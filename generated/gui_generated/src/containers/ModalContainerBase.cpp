/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/ModalContainerBase.hpp>
#include <images/BitmapDatabase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ModalContainerBase::ModalContainerBase() :
    buttonCallback(this, &ModalContainerBase::buttonCallbackHandler)
{
    setWidth(320);
    setHeight(240);
    modalWindow.setBackground(touchgfx::BitmapId(BITMAP_MODALBACKGROUND_ID), 10, 30);
    modalWindow.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    modalWindow.setShadeAlpha(150);
    CloseButton.setXY(250, 15);
    CloseButton.setBitmaps(touchgfx::Bitmap(BITMAP_EXIT_ID), touchgfx::Bitmap(BITMAP_EXIT_ID));
    CloseButton.setVisible(false);
    CloseButton.setAction(buttonCallback);
    modalWindow.add(CloseButton);

    ImageSTM32Series.setXY(13, 1);
    ImageSTM32Series.setBitmap(touchgfx::Bitmap(BITMAP_LABEL_STM32CUBEF0_ID));
    modalWindow.add(ImageSTM32Series);

    add(modalWindow);

    DeviceDescriptionTxt.setPosition(23, 129, 275, 70);
    DeviceDescriptionTxt.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    DeviceDescriptionTxt.setLinespacing(0);
    DeviceDescriptionTxt.setWideTextAction(WIDE_TEXT_WORDWRAP);
    DeviceDescriptionTxt.setTypedText(touchgfx::TypedText(T_STM32F0DES));
    add(DeviceDescriptionTxt);
}

ModalContainerBase::~ModalContainerBase()
{

}

void ModalContainerBase::initialize()
{

}

void ModalContainerBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &CloseButton)
    {
        //PopUpCloseInteraction
        //When CloseButton clicked call virtual function
        //Call CloseButtonPressed
        CloseButtonPressed();
    }
}
